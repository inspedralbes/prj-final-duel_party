<div>
    <h1>Datos de Aceleración del Dispositivo</h1>
    <p><strong>X:</strong> {{ accelerationX }}</p>
    <p><strong>Y:</strong> {{ accelerationY }}</p>
    <p><strong>Z:</strong> {{ accelerationZ }}</p>
    
    <div v-if="isShakeDetected" class="shake-detected">
      <h2>¡Sacudida detectada!</h2>
      <p>El dispositivo ha sido sacudido con fuerza.</p>
    </div>
    <div v-else class="no-shake">
      <h2>No se ha detectado sacudida.</h2>
      <p>El dispositivo está quieto.</p>
    </div>
  </div>


const accelerationX = ref(0);
    const accelerationY = ref(0);
    const accelerationZ = ref(0);

    // Umbral para detectar una sacudida (puedes ajustarlo según necesites)
    const shakeThreshold = 15;
    const isShakeDetected = ref(false);

    // Función que maneja el evento devicemotion
    const handleMotion = (event) => {
      accelerationX.value = event.acceleration.x;
      accelerationY.value = event.acceleration.y;
      accelerationZ.value = event.acceleration.z;

      // Calcular la aceleración total (magnitud del vector de aceleración)
      const totalAcceleration = Math.sqrt(
        accelerationX.value ** 2 + accelerationY.value ** 2 + accelerationZ.value ** 2
      );

      // Detectar sacudida cuando la aceleración total supera el umbral
      isShakeDetected.value = totalAcceleration > shakeThreshold;
    };

    // Se agrega el listener al montarse el componente
    onMounted(() => {
      if (window.DeviceMotionEvent) {
        window.addEventListener('devicemotion', handleMotion);
      }
    });

    // Se remueve el listener al desmontarse el componente
    onUnmounted(() => {
      if (window.DeviceMotionEvent) {
        window.removeEventListener('devicemotion', handleMotion);
      }
    }); 

